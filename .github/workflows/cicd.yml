name: CI/CD Pipeline - Portfolio Tracker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Build with Maven
      - name: Build with Maven
        run: mvn -f app/pom.xml clean package -DskipTests

      # Run tests
      - name: Run Unit Tests
        run: mvn -f app/pom.xml test

      # SonarCloud Scan (or SonarQube if you have self-hosted server)
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=portfolio-tracker                  
            -Dsonar.organization=portfolio-tracker
            -Dsonar.branch.name=main  
            -Dsonar.host.url=https://sonarcloud.io

      # Build Docker Image
      - name: Build Docker Image
        run: docker build -f app/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/portfolio-tracker:latest app/

      # Scan Docker Image with Trivy
      - name: Scan Docker Image for Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/portfolio-tracker:latest
          format: 'table'
          exit-code: '0'                          # Fail the workflow if vulnerabilities are found
          ignore-unfixed: true                    #ignores vulnerabilities that have no fixes yet (optional, depends on your policy).
          severity: 'HIGH,CRITICAL'               # Only fail on HIGH or CRITICAL vulnerabilities

      # Push to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/portfolio-tracker:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1           #CHANGE TO YOUR REGION

      # Update kubeconfig for EKS
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name portfoliotracker-eks

      # Deploy to EKS
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/
          
        
